// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id      String      @id @default(uuid())
  email   String   @unique
  name    String?
  password  String
  role    Role     @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  @@map("users")
}

enum Role{
  ADMIN
  MANAGER
  USER
}

model PurchaseOrder{
  id  String  @id @default(cuid())
  poNumber  String
  company String
  status  POStatus
  total Int
  discount  Int
  tax Int
  grandTotal

  purchaseOrderItem PurchaseOrderItem[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("purchase_orders")
}

model PurchaseOrderItem{
  id  String  @id @default(cuid())
  itemName  String
  qty Int
}

model PurchaseOrderItem{
  id  String  @id @default(cuid())
  itemName  String
  qty Int
  price Int

  poId  String
  purchaseOrders  PurchaseOrder @relation(fields: [poId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("purchase_orders_items")  
}

enum POStatus{
  DRAFT
  AWAITING_RESPONSE
  APPROVED
}